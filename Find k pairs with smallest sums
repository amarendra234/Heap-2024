class Solution {
public:
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
         pair<int,pair<int,int>>p;
         priority_queue<pair<int,pair<int,int>>,vector<pair<int,pair<int,int>>>,greater<pair<int,pair<int,int>>>>pq;
         pq.push({nums1[0]+nums2[0],{0,0}});
         vector<vector<int>>ans;
         set<pair<int,int>>st;
         st.insert({0,0});
         while(!pq.empty() and k>0){
            vector<int>temp;
            int sum=pq.top().first;
            int i=pq.top().second.first;
            int j=pq.top().second.second;
            pq.pop();
            temp.push_back(nums1[i]);
            temp.push_back(nums2[j]);
            ans.push_back(temp);
          
            k--;
            if(j+1<nums2.size()){
                if(st.find({i,j+1})==st.end()){
                    pq.push({nums1[i]+nums2[j+1],{i,j+1}});
                    st.insert({i,j+1});
                }
            }
            if(i+1<nums1.size()){
                if(st.find({i+1,j})==st.end()){
                pq.push({nums1[i+1]+nums2[j],{i+1,j}});
                st.insert({i+1,j});
                }
            }
         }
         return ans;
    }
};
